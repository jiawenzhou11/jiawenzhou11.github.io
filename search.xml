<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Fifth</title>
      <link href="/post/13df0077.html"/>
      <url>/post/13df0077.html</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标签 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一首小诗</title>
      <link href="/post/46d5f113.html"/>
      <url>/post/46d5f113.html</url>
      
        <content type="html"><![CDATA[<p>打草机的声音嗡嗡作响<br>空气中夹杂着泥土和草的气息<br>偶尔一阵风吹来<br>淡淡的花香飘过<br>我想，那是你<br>又希望那不是你</p><p>远处的群山连绵起伏<br>在蔚蓝色的天空的衬托下形成一道分界线<br>万里无云的日子里<br>太阳毫无保留地洒向大地<br>我想，那是你<br>又希望那不是你</p><p>人群穿梭不息<br>向着我或是离开我<br>当这城市又一次陷入寂静中时<br>回想那人群中的身影<br>我想，向着我的是你<br>又希望离开我的不是你</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 自己写的诗 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思念 </tag>
            
            <tag> 爱情 </tag>
            
            <tag> 懵懂 </tag>
            
            <tag> 诗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法在hexo博客下的测试</title>
      <link href="/post/3289b53b.html"/>
      <url>/post/3289b53b.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-标题测试"><a href="#1-标题测试" class="headerlink" title="1.标题测试"></a>1.标题测试</h1><blockquote><p>markdown标题格式：# 这是文章标题</p></blockquote><p>用#号表示标题，后接一个<strong>空格</strong>，多个#号为<strong>子标题</strong>，markdown支持六级标题，下面测试1-6个＃号。</p><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><h1 id="2-标题接正文"><a href="#2-标题接正文" class="headerlink" title="2.标题接正文"></a>2.标题接正文</h1><p>此处为正文，一般知道标题和文章怎么写就可以开写咯。</p><h1 id="3-引用"><a href="#3-引用" class="headerlink" title="3.引用"></a>3.引用</h1><blockquote><p>markdown引用格式：&gt;这是引用内容</p></blockquote><p>在整个段落前加&gt;即可将段落变为引用，引用可以嵌套使用，内层使用多个&gt;，如下所示。</p><blockquote><p>这是一级引用</p><blockquote><p>这是二级引用</p><blockquote><p>这是三级引用</p></blockquote><p>回到二级引用</p></blockquote><p>回到一级引用</p></blockquote><p>引用的块内也可以添加标题、列表、代码块等，如下所示。</p><blockquote><h5 id="这是引用内部的标题"><a href="#这是引用内部的标题" class="headerlink" title="这是引用内部的标题"></a>这是引用内部的标题</h5></blockquote><h1 id="4-列表"><a href="#4-列表" class="headerlink" title="4.列表"></a>4.列表</h1><blockquote><p>markdown列表格式：- 无序列表 、* 无序列表 、+ 无序列表 、1. 有序列表。列表项目符号后面跟一个空格</p></blockquote><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><ul><li>这是使用-号的无序列表</li></ul><ul><li>这是使用+号的无序列表</li></ul><ul><li>这是使用*号的无序列表</li></ul><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><ol><li>有序列表1</li><li>有序列表2</li><li>有序列表3</li></ol><h4 id="列表内引用"><a href="#列表内引用" class="headerlink" title="列表内引用"></a>列表内引用</h4><p>列表内引用时，&gt;要缩进，如下所示：</p><ul><li>列表内引用示例：<blockquote><p>此处的&gt;缩进了一个空格。</p></blockquote></li></ul><h4 id="列表的嵌套"><a href="#列表的嵌套" class="headerlink" title="列表的嵌套"></a>列表的嵌套</h4><p>列表的嵌套采用缩进，如下所示</p><ul><li>一级列表<ul><li>二级列表</li></ul></li></ul><h1 id="5-代码"><a href="#5-代码" class="headerlink" title="5.代码"></a>5.代码</h1><p>将代码块放在两个```之间即可，可以选定一个语言标识符，然后就可以启用它为代码着色了，如下所示。</p><pre class=" language-ruby"><code class="language-ruby"><span class="token keyword">require</span> <span class="token string">'redcarpet'</span>markdown <span class="token operator">=</span> <span class="token constant">Redcarpet</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span>puts markdown<span class="token punctuation">.</span>to_html</code></pre><h1 id="6-强调"><a href="#6-强调" class="headerlink" title="6.强调"></a>6.强调</h1><blockquote><p>markdown语法中强调有加粗和斜体两种,斜体用两个*号或者_括起来，删除线用两个~括起来</p></blockquote><h4 id="斜体示例"><a href="#斜体示例" class="headerlink" title="斜体示例"></a>斜体示例</h4><p><em>这是佳文的博客</em></p><h4 id="加粗示例"><a href="#加粗示例" class="headerlink" title="加粗示例"></a>加粗示例</h4><p><strong>这是佳文的博客</strong></p><h4 id="删除线示例"><a href="#删除线示例" class="headerlink" title="删除线示例"></a>删除线示例</h4><p><del>这是佳文的博客</del></p><h4 id="测试两者或三者叠加"><a href="#测试两者或三者叠加" class="headerlink" title="测试两者或三者叠加"></a>测试两者或三者叠加</h4><p><strong><em>这是佳文的博客</em></strong><br><del><em>这是佳文的博客</em></del><br><del><strong>这是佳文的博客</strong></del><br><del><strong><em>这是佳文的博客</em></strong></del><br><strong><del><em>这是佳文的博客</em></del></strong></p><h1 id="7-自动链接"><a href="#7-自动链接" class="headerlink" title="7.自动链接"></a>7.自动链接</h1><blockquote><p>方括号里写文字，圆括号里放链接，markdown会把它自动转换成链接。<a href="http://www.baidu.com" target="_blank" rel="noopener">百度</a></p></blockquote><p>链接示例：<a href="http://www.baidu.com" target="_blank" rel="noopener">百度</a></p><h1 id="8-表格"><a href="#8-表格" class="headerlink" title="8.表格"></a>8.表格</h1><blockquote><p>markdown中可以制作表格，第一行为表头，用|隔开，-表示文字居左，:-:表示文字居中，-:表示文字居右</p></blockquote><p>表格示例如下：</p><table><thead><tr><th>First Header</th><th align="center">Second Header</th><th align="right">Third Header</th></tr></thead><tbody><tr><td>Content Cell</td><td align="center">Content Cell</td><td align="right">Content Cell</td></tr><tr><td>Content Cell</td><td align="center">Content Cell</td><td align="right">Content Cell</td></tr></tbody></table><h1 id="9-分割线"><a href="#9-分割线" class="headerlink" title="9.分割线"></a>9.分割线</h1><blockquote><p>使用三个相连的下划线_来产生一个分割线</p></blockquote><p>分割线示例：<br>这是分割线以上</p><hr><p>这是分割线以下</p><h1 id="10-图片"><a href="#10-图片" class="headerlink" title="10.图片"></a>10.图片</h1><blockquote><p>Markdown 使用了类似链接的语法来插入图片</p></blockquote><h4 id="内联图片"><a href="#内联图片" class="headerlink" title="内联图片"></a>内联图片</h4><ul><li>一个惊叹号!</li><li>接着一个方括号，里面是图片的替代文字</li><li>接着一个普通括号，里面是图片的网址，最后还可以用引号包住并加上选择性的title文字<br>内联图片示例：<br><img src="/medias/myicon.jpg" alt="这是一张内联图片示例"></li></ul><h1 id="11-遇到的bug及解决方法-不定时更新"><a href="#11-遇到的bug及解决方法-不定时更新" class="headerlink" title="11.遇到的bug及解决方法(不定时更新)"></a>11.遇到的bug及解决方法(不定时更新)</h1><ol><li>尽量遵守标准的markdown语法，我觉得最坑的就是这个<strong>空格</strong>，有时候忘了加也不好看出来，但是会引起各种各样的bug。</li><li>每一章(就是每个#标题包含的内容)写完最好<strong>换个行</strong>，不然上一行的格式如引用会对后面造成影响，经常换行没毛病。</li><li>表格目前没有实现居中居左居右，因为没有竖线，看不出来，改天瞧瞧吧。</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> markdown语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建心路历程</title>
      <link href="/post/b1b3145f.html"/>
      <url>/post/b1b3145f.html</url>
      
        <content type="html"><![CDATA[<h1 id="为什么要搭建博客呢"><a href="#为什么要搭建博客呢" class="headerlink" title="为什么要搭建博客呢"></a>为什么要搭建博客呢</h1><p>古人二十弱冠，三十而立，相信很多二十出头的年轻人都有一些心慌，总觉得不应该和十几岁那样了，应该做点什么让自己变得更有价值。前几天刚过完二十二岁的生日，心里确实有些触动，有时候觉得自己很成熟，有时候又觉得很幼稚。我对于生活的要求并不高，吃饱喝足，然后做自己喜欢的事，偶尔能帮别人做点力所能及的事，就已经很开心了。</p><p>问题是，自己喜欢的事是什么？我还尚未找到自己的人生目标，所以每当看见身边的人为了他们的目标努力前行的时候，我都会羡慕不已。每次问自己这个问题，都会感到有些着急，看着同学们工作的工作，学习的发论文，参加比赛，来自同龄人的压力确实会让自己感到紧张。我的缺点是：总想着一切条件就绪了再去做事情，如果条件不满足，那先准备条件。所以导致很多事情会拖着，有的人连数学建模是什么都不知道，只是听到这个比赛的名字就愿意去参加，在过程中学习，我承认这是我比较难接受的。从某种角度来说，我很难开始一件事，但开始了就会全力以赴。</p><p>为什么搭建自己的博客呢？主要是想记录一下自己的生活和心情，遇到一些技术问题的话也记录一下，方便其他遇到同样问题的人，是的，帮助别人的快乐对我来说和自己解决问题的快乐相当。在其他平台上我也是个透明人，也想过在知乎、CSDN之类的平台写，但是一方面我既想记录生活，又想记录专业相关的技术问题，在任何一个平台上似乎都不太能满足；另一方面是写的东西要经过审查，有被删除的风险，相信没有人会愿意自己的努力付之一炬吧，所以选择了自己搭建博客。</p><h1 id="搭建博客的过程"><a href="#搭建博客的过程" class="headerlink" title="搭建博客的过程"></a>搭建博客的过程</h1><p>搭建博客对我来说是个完全陌生的过程，但也不算特别困难，毕竟专业和计算机还是有一定关联，编程知识也懂得一些，就是不懂Git的命令和操作，简单学了一下。对于对编程、命令行、计算机常识不熟悉的人，如果想自己搭建博客还是有一定难度的。下面就总结一下我自己的一点心得体会，主要是针对像我这样的同胞。</p><p>首先应该明确我们的问题是：<strong>搭建博客</strong>，所以要去搜索有哪些搭建博客的方法或模板，这里我选择的是hexo+githubpages的方法。然后还是以搭建博客为主，一定是先看<strong>官方文档</strong>，去找hexo博客官方网站，去看<strong>官方教程</strong>。</p><p>为什么呢，虽然我们会搜到很多博主的博客搭建方法，冠以<strong>小白、零基础</strong>之类的关键词，但是对于不同的人而言，博主并不知道你到底有多少基础，在我看来，起码你要知道计算机的一些基本操作，知道命令行操作方法，会看一点程序比较好，如果是完全不懂这些，那确实需要花大量时间。即使你拥有一定的基础，我还是不建议你直接去看博主的总结，因为博主搭建过程遇到的问题不一定都记录下来了，你遇到的问题可能和他不一样，如果按照他的步骤来却得不到相同的结果，然后再去查为什么，这回浪费很多的时间；而官方教程出问题的可能性很小，出现问题再仔细看看教程，很可能是自己的操作问题。先按官方教程搭建完，再去解决你想个性化的部分，去查询博客，会节省很多时间。</p><p>所以我的建议就是：</p><blockquote><p>先看<strong>官方教程</strong>，再看博主文章！</p></blockquote><p>然后我会在友情链接里放一些觉得还不错的博主的链接，还有我修改时借鉴到的博主，感谢他们的努力，OSU！</p><h1 id="搭建博客的心得"><a href="#搭建博客的心得" class="headerlink" title="搭建博客的心得"></a>搭建博客的心得</h1><p>在一段时间里做一件事对我来说是比较容易的，如果突然有很多事情堆在手里，我会不知所措。所以对于我来说，在一段时间了，最好不要同时做很多件事。而生活是一个又一个琐碎的小事组成的，这让我感到很烦闷，同时，计划被打乱也让我有些不开心。前段时间说要学习Python，连续看了可能有一个月的时间，有那么几天没看，于是就抛掷脑后了，唉！</p><p>搭建博客前前后后花了有两周吧， 利用周末和零散的时间，还是要学会管理时间，对于问题有大概的把握，知道自己多久能搞定，合理规划一下时间。总之，今天博客已经初具雏形，可以专注于内容的创作了，挺开心的。最后，在友情链接里贴上几个大佬的链接，感谢他们的努力和记录，帮助了我。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建心得 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客样式更新记录</title>
      <link href="/post/53b0c153.html"/>
      <url>/post/53b0c153.html</url>
      
        <content type="html"><![CDATA[<h1 id="这是我的第一篇博客"><a href="#这是我的第一篇博客" class="headerlink" title="这是我的第一篇博客"></a>这是我的第一篇博客</h1><blockquote><p>折腾了快一个星期了，终于搞懂了搭建博客的过程。<br>接下来学习学习markdown语法，写写文章。<br>主要记录自己的生活状态，心情，偶尔记录一下学习的心得。</p></blockquote><h1 id="博客修改目标-未完成"><a href="#博客修改目标-未完成" class="headerlink" title="博客修改目标(未完成)"></a>博客修改目标(未完成)</h1><blockquote><p>找一些自己喜欢的清晰的图片替代主页的背景<br>百度、谷歌收录<br>代码和数学公式的支持</p></blockquote><h1 id="博客修改记录-已完成"><a href="#博客修改记录-已完成" class="headerlink" title="博客修改记录(已完成)"></a>博客修改记录(已完成)</h1><blockquote><p>文章底部链接已经去掉<br>颜色已经改为紫色到玫瑰红的渐变了<br>加了四首音乐<br>更改了博客icon，加了推荐文章<br>修改了qq的链接，可以唤起TIM跟博主对话12.19<br>修改了url，主页下面的文章在新页面打开，不影响音乐播放12.20<br>加了一个动漫小姐姐hibiki 12.20<br>小小地改了一下动态标签栏 12.20<br>在阿里云整了个域名，感觉有点麻烦呢，还要上传身份证照片，花了挺久的。12.21<br>修改了主页的图片掩膜的透明度 12.21<br>增加了百度和谷歌收录，因为换了域名，现在的域名暂时搜不到，谷歌可以搜到之前github的域名，直接谷歌博客的名字也可以找到。现在就等待吧。12.21</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客更新记录 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
